{"version":3,"sources":["data.js","App.js","App.styles.js","serviceWorker.js","index.js"],"names":["MONTHS","name","color","days","id","JOBS","disabled","useStyles","makeStyles","heading","marginBottom","fontWeight","textAlign","textTransform","letterSpacing","day","position","flexGrow","flexBasis","display","alignItems","justifyContent","minWidth","height","fontSize","dayMonth","left","top","job","paddingLeft","paddingRight","backgroundColor","borderRight","borderBottom","borderBottomColor","jobDay","paddingBottom","width","jobDay_disabled","jobDayCheckbox","padding","borderRadius","opacity","root","nav","flexDirection","flexShrink","paddingTop","maxWidth","content","overflowX","contentHeader","App","classes","React","useState","JSON","parse","localStorage","getItem","jobDayCheckedById","setJobDayCheckedById","className","CssBaseline","Box","Typography","variant","pt","map","i","key","month","j","style","dayOptions","clsx","Checkbox","disableRipple","checkedIcon","checked","onChange","target","newJobDayCheckedById","setItem","stringify","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aaaa179e.chunk.js","sourcesContent":["export const MONTHS= [\r\n  {\r\n    name: 'Январь',\r\n    color: '#27b1c0',\r\n    days: [\r\n      { id: 1, name: '8', },\r\n      { id: 2, name: '9', },\r\n      { id: 3, name: '10', },\r\n      { id: 4, name: '11', },\r\n      { id: 5, name: '12', },\r\n      { id: 6, name: '13', },\r\n      { id: 7, name: '14', },\r\n      { id: 8, name: '15', },\r\n      { id: 9, name: '16', },\r\n      { id: 10, name: '17', },\r\n      { id: 11, name: '18', },\r\n      { id: 12, name: '19', },\r\n      { id: 13, name: '20', },\r\n      { id: 14, name: '21', },\r\n      { id: 15, name: '22', },\r\n      { id: 16, name: '23', },\r\n      { id: 17, name: '24', },\r\n      { id: 18, name: '25', },\r\n      { id: 19, name: '26', },\r\n      { id: 20, name: '27', },\r\n      { id: 21, name: '28', },\r\n      { id: 22, name: '29', },\r\n      { id: 23, name: '30', },\r\n      { id: 24, name: '31', },\r\n    ]\r\n  },\r\n  {\r\n    name: 'Февраль',\r\n    color: '#b8a4d9',\r\n    days: [\r\n      { id: 25, name: '1', },\r\n      { id: 26, name: '2', },\r\n      { id: 27, name: '3', },\r\n      { id: 28, name: '4', },\r\n      { id: 29, name: '5', },\r\n      { id: 30, name: '6', },\r\n    ]\r\n  }\r\n]\r\n\r\nexport const JOBS= [\r\n  {\r\n    id: 1,\r\n    name: 'Посмотрела урок',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Посмотрела трансляцию',\r\n    days: {\r\n      '2': { disabled:true, },\r\n      '3': { disabled:true, },\r\n      '4': { disabled:true, },\r\n      '5': { disabled:true, },\r\n      '6': { disabled:true, },\r\n      '7': { disabled:true, },\r\n      '8': { disabled:true, },\r\n      '9': { disabled:true, },\r\n      '10': { disabled:true, },\r\n      '11': { disabled:true, },\r\n      '12': { disabled:true, },\r\n      '13': { disabled:true, },\r\n      '14': { disabled:true, },\r\n      '15': { disabled:true, },\r\n      '16': { disabled:true, },\r\n      '17': { disabled:true, },\r\n      '18': { disabled:true, },\r\n      '19': { disabled:true, },\r\n      '20': { disabled:true, },\r\n      '21': { disabled:true, },\r\n      '22': { disabled:true, },\r\n      '23': { disabled:true, },\r\n      '24': { disabled:true, },\r\n      '25': { disabled:true, },\r\n      '26': { disabled:true, },\r\n      '27': { disabled:true, },\r\n      '28': { disabled:true, },\r\n      '29': { disabled:true, },\r\n    }\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Сделала домашку',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Посмотрела сериал или фильм на английском',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Выучила 5 новых слов',\r\n  },\r\n]","import React from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles'\nimport styles from './App.styles'\nimport clsx from 'clsx'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport CheckIcon from '@material-ui/icons/Check'\n\nimport { MONTHS, JOBS } from './data'\n\nconst useStyles= makeStyles(styles)\n\nfunction App() {\n  const classes= useStyles()\n  const [ jobDayCheckedById, setJobDayCheckedById ]= React.useState(JSON.parse(localStorage.getItem('jobDayCheckedById') || '{}'))\n  return (\n    <div className=\"App\">\n      <CssBaseline/>\n      <Box className={classes.root}>\n        <Typography className={classes.heading} variant=\"h3\">\n          <strong>Трекер</strong> активности\n        </Typography>\n        <Box display=\"flex\">\n\n          <Box className={classes.nav} display=\"flex\" flexDirection=\"column\" pt={6}>\n            {JOBS.map((job, i) => (\n              <div key={i} className={classes.job}>\n                <div>{job.name}</div>\n              </div>\n            ))}\n          </Box>\n\n          <Box className={classes.content}>\n            <Box className={classes.contentHeader}>\n              {MONTHS.map((month, i) => {\n                return month.days.map((day, j) => (\n                  <Box\n                    key={day.id}\n                    className={classes.day}\n                    flexBasis={24}\n                    style={{ backgroundColor:month.color }}\n                  >\n                    {j === 0 && (\n                      <div className={classes.dayMonth} style={{ color:month.color }}>\n                        {month.name}\n                      </div>\n                    )}\n                    {day.name}\n                  </Box>\n                ))\n              })}\n            </Box>\n            {JOBS.map((job, i) => (\n              <Box key={i} display=\"flex\">\n                {MONTHS.map((month, i) => {\n                  return month.days.map((day, j) => {\n                    const dayOptions= (job.days && job.days[day.id]) || {}\n                    return (\n                      <Box\n                        key={day.id}\n                        className={clsx(classes.jobDay, dayOptions.disabled && classes.jobDay_disabled )}\n                        style={{\n                          //borderLeftColor: month.color,\n                          //borderBottomColor: month.color,\n                          backgroundColor: month.color,\n                        }}\n                      >\n                        <div>\n                          {dayOptions.disabled ? (\n                            null\n                          ) : (\n                            <Checkbox\n                              className={classes.jobDayCheckbox}\n                              disableRipple\n                              checkedIcon={(\n                                <CheckIcon/>\n                              )}\n                              checked={!!jobDayCheckedById[`${job.id}-${day.id}`]}\n                              onChange={({ target:{ checked }}) => {\n                                const newJobDayCheckedById= {\n                                  ...jobDayCheckedById,\n                                  [`${job.id}-${day.id}`]: checked\n                                }\n                                setJobDayCheckedById(newJobDayCheckedById)\n                                localStorage.setItem('jobDayCheckedById', JSON.stringify(newJobDayCheckedById))\n                              }}\n                            />\n                          )}\n                        </div>\n                      </Box>\n                    )\n                  })\n                })}\n              </Box>\n            ))}\n          </Box>\n\n        </Box>\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","export default {\r\n\r\n  heading: {\r\n    marginBottom: 24,\r\n    fontWeight: 300,\r\n    textAlign: 'left',\r\n    textTransform: 'uppercase',\r\n    letterSpacing: '0.005em',\r\n    color: '#ff5e8c',\r\n    '& > strong': {\r\n      fontWeight: 900,\r\n      letterSpacing: '0.025em',\r\n    }\r\n  },\r\n\r\n  day: {\r\n    position: 'relative',\r\n    flexGrow: 1,\r\n    flexBasis: 24,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    minWidth: 32,\r\n    height: 48,\r\n    fontSize: '14px',\r\n    color: '#fff',\r\n  },\r\n  dayMonth: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: -24,\r\n  },\r\n  job: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 48,\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    fontSize: '14px',\r\n    color: '#fff',\r\n    backgroundColor: '#ff5e8c',\r\n    textAlign: 'left',\r\n    borderRight: '2px solid #fff',\r\n    borderBottom: '2px solid #fff',\r\n    '&:last-child': {\r\n      borderBottomColor: 'transparent',\r\n    }\r\n  },\r\n  jobDay: {\r\n    flexGrow: 1,\r\n    flexBasis: 24,\r\n    display: 'flex',\r\n    alignItems: 'stretch',\r\n    justifyContent: 'stretch',\r\n    height: 48,\r\n    minWidth: 32,\r\n    paddingLeft: 2,\r\n    paddingBottom: 2,\r\n    '& > div': {\r\n      width: '100%',\r\n      backgroundColor: '#fff',\r\n    },\r\n    //'&:first-child': {\r\n    //  paddingLeft: 0,\r\n    //},\r\n    '&:last-child': {\r\n      paddingRight: 2,\r\n    }\r\n    //borderLeft: '2px solid transparent',\r\n    //borderBottom: '2px solid transparent',\r\n    //'&:not($jobDay_disabled) + $jobDay_disabled': {\r\n    //  //borderLeftColor: 'transparent !important',\r\n    //}\r\n  },\r\n  jobDay_disabled: {\r\n    '& + $jobDay_disabled': {\r\n      paddingLeft: 0,\r\n    }\r\n  },\r\n\r\n  jobDayCheckbox: {\r\n    padding: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: 0,\r\n    '& svg': {\r\n      color: '#ff5e8c',\r\n    },\r\n    '&:not(.Mui-checked) svg': {\r\n      opacity: 0,\r\n    }\r\n  },\r\n\r\n  root: {\r\n    padding: 24,\r\n  },\r\n  nav: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flexShrink: 0,\r\n    paddingTop: 48 + 24,\r\n    maxWidth: 240,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    overflowX: 'auto',\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    paddingTop: 24,\r\n  },\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}